prompt = f"""
请根据项目 `{project_name}` 的代码库设计编程学习关卡：

代码上下文：
{context}
知识点：
{knowledge}

### 关卡设计规范
每个知识点关卡需包含：
1. **知识点引入** - 用生活案例类比技术概念
2. **任务要求** - 具体的代码实现目标
3. **示例参考** - 可模仿的代码片段

### 输出格式要求
```yaml
- name: |
    关卡主题{name_lang_hint}
  description: |
    ▸ 知识点介绍
    ▸ 简单例子
    ▸ 简洁明了
  requirements: |
    ▸ 把代码通过语言描述
    ▸ 描述不应太过直白，需要有点挑战
    ▸ 用户可以根据描述完成复刻代码
```
### 示例
```yaml
- name: |
    数组
  description: |
    如果你想建立一个集合，可以用 _数组_ 这样的数据类型。Solidity 支持两种数组: _静态_ 数组和 _动态_ 数组:
    ```solidity
    // 固定长度为2的静态数组:
    uint[2] fixedArray;
    // 固定长度为5的string类型的静态数组:
    string[5] stringArray;
    // 动态数组，长度不固定，可以动态添加元素:
    uint[] dynamicArray;
    ```
    你也可以建立一个 结构体类型的数组，例如，上一章提到的 Person:
    ```solidity
    Person[] people; // 这是动态数组，我们可以不断添加元素
    ```
    
    ## 公共数组
    你可以定义 public 数组，Solidity 会自动创建 getter 方法。语法如下:
    ```solidity
    Person[] public people;
    ```
    其它的合约可以从这个数组读取数据（但不能写入数据），所以这在合约中是一个有用的保存公共数据的模式。
  requirements: |
    为了把一个僵尸部队保存在我们的APP里，并且能够让其它APP看到这些僵尸，我们需要一个公共数组。
    创建一个数据类型为 Zombie 的结构体数组，用 public 修饰，命名为：zombies。
```
"""